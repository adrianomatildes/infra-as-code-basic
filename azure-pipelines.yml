# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

- task: CopyFiles@2  # Tarefa para copiar os arquivos do GitHub
  displayName: 'Copy Files from GitHub'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/adrianomatildes/infra-as-code-basic'
    Contents: '**'
    TargetFolder: '$(Build.SourcesDirectory)/adrianomatildes/_git/AWS-AZURE-GITHUB'

- script: |
    cd $(Build.SourcesDirectory)/adrianomatildes/_git/AWS-AZURE-GITHUB

    git config --global user.email "adriano.matildes@outlook.com"
    git config --global user.name "Adriano Matildes"

    git add .
    git commit -m "Adicionar arquivos do GitHub"
    git push origin master
  displayName: 'Adicionar e fazer o push dos arquivos'
- task: PublishPipelineArtifact@1
  displayName: 'Publish Artifacts'
  inputs:
    artifactName: 'publish'
    targetPath: .

- task: CopyFiles@2  # Tarefa para copiar o artefato para o reposit√≥rio
  displayName: 'Copy Artifact to Repository'
  inputs:
    SourceFolder: .
    Contents: '**'
    TargetFolder: '$(Build.SourcesDirectory)/_git/AWS-AZURE-GITHUB'

- script: |
    echo Instalando o Terraform!
    which wget &&
    sudo apt-get install wget &&
    wget https://releases.hashicorp.com/terraform/0.15.5/terraform_0.15.5_linux_amd64.zip &&
    sudo apt-get install unzip &&
    unzip terraform_0.15.5_linux_amd64.zip &&
    sudo mv terraform /usr/local/bin/ &&
    terraform --version
  displayName: 'Run a one-line script'